generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Agent {
  id                     String                @id @default(uuid())
  first_name             String
  last_name              String
  full_name              String                @default("")
  email                  String                @unique
  password               String
  mobile_number          String
  otp                    Int?
  agent_profile_pic      String
  city                   String
  state                  String
  local_area             String?
  exp_in_field           Boolean               @default(false)
  prev_organization_name String?
  total_exp              Int?
  created_at             DateTime              @default(now())
  listed_properties      ResidentialProperty[]
  accessToken            String?               @db.VarChar(300)
  refreshToken           String?               @db.VarChar(300)
  agent_auth             AgentAuth[]
}

model AgentAuth {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  updated_at DateTime
  created_by Agent    @relation(fields: [agent_id], references: [id])
  agent_id   String
  otp        String
}

// Whenever you update your Prisma schema, you will have to update your database schema using either prisma migrate dev or prisma db push. This will keep your database schema in sync with your Prisma schema. The commands will also regenerate Prisma Client.

model HouseOwner {
  id            String @id @default(uuid())
  fullname      String
  mobile_number String
  email         String @unique
  address       String
  city          String
  state         String
  created_at   DateTime         @default(now())
  auth         HouseOwnerAuth[]
  accessToken  String?          @db.VarChar(300)
  refreshToken String?          @db.VarChar(300)
}

model HouseOwnerAuth {
  id             String     @id @default(uuid())
  created_at     DateTime   @default(now())
  expires_at     DateTime
  created_by     HouseOwner @relation(fields: [house_owner_id], references: [id])
  house_owner_id String
  otp            String
}

//resident property
model ResidentialProperty {
  id                  String             @id @default(uuid())
  owner_name          String
  owner_mobile_number Int                @unique @default(0)
  looking_to          LookingTO          @default(BUY)
  locality            String
  property_type       PropertyType       @default(APARTMENT)
  built_up_area       Int                @default(0)
  furnished_type      FurnishedType      @default(UNFURNISHED)
  uploaded_by         Agent?             @relation(fields: [agentId], references: [id])
  agentId             String
  cost                Int
  construction_status ConstructionStatus @default(READY_TO_MOVE)
}

//will add the bhk details  
enum PropertyType {
  APARTMENT
  INDEPENDENT_FLOOR
  INDEPENDENT_HOUSE
  VILLA
  AGRICULTURAL_PLOT
}

enum LookingTO {
  BUY
  RENT
  PG_COLIVING
}

enum BhkDetails {
  RK_1
  BHK_1
  BHK_2
  BHK_3
}

enum FurnishedType {
  FULLY_FURNISHED
  SEMI_FURNISHED
  UNFURNISHED
}

enum ConstructionStatus {
  READY_TO_MOVE
  UNDER_CONSTRUCTION
}
