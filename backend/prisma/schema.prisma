// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id] , onDelete: Cascade)  //linking the tables
//   authorId  Int
// }

//  author    User     @relation(fields: [authorId], references: [id]) //authorId represents the column in local table and references is for the relation's table columm name, then need to link to parent table or other table which we want to connect
// onDelete: Cascade - this mean when entry delete in user table, so in the post table it will automatically delete the related database in post or parent table

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }

model Agent {
  id                     String                @id @default(uuid())
  first_name             String
  last_name              String
  full_name              String                @default("")
  email                  String
  password               String
  agent_profile_pic      String
  city                   String
  state                  String
  local_area             String?
  exp_in_field           Boolean               @default(false)
  prev_organization_name String?
  total_exp              Int?
  created_at             DateTime              @default(now())
  listed_properties      ResidentialProperty[]
}

// Whenever you update your Prisma schema, you will have to update your database schema using either prisma migrate dev or prisma db push. This will keep your database schema in sync with your Prisma schema. The commands will also regenerate Prisma Client.

//resident property

model ResidentialProperty {
  id                  String                @id @default(uuid())
  owner_name          String
  looking_to          LookingTO          @default(BUY)
  locality            String
  property_type       PropertyType       @default(APARTMENT)
  built_up_are        Int                @default(0)
  furnished_type      FurnishedType      @default(UNFURNISHED)
  uploaded_by         Agent?             @relation(fields: [agentId], references: [id])
  agentId             String
  cost                Int
  construction_status ConstructionStatus @default(READY_TO_MOVE)
}

enum PropertyType {
  APARTMENT
  INDEPENDENT_FLOOR
  INDEPENDENT_HOUSE
  VILLA
  AGRICULTURAL_PLOT
}

enum LookingTO {
  BUY
  RENT
  PG_COLIVING
}

enum BhkDetails {
  RK_1
  BHK_1
  BHK_2
  BHK_3
}

enum FurnishedType {
  FULLY_FURNISHED
  SEMI_FURNISHED
  UNFURNISHED
}

enum ConstructionStatus {
  READY_TO_MOVE
  UNDER_CONSTRUCTION
}
